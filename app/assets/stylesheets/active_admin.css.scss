// SASS variable overrides must be declared before loading up Active Admin's styles.
//
// To view the variables that Active Admin provides, take a look at
// `app/assets/stylesheets/active_admin/mixins/_variables.css.scss` in the
// Active Admin source.
//
// For example, to change the sidebar width:
// $sidebar-width: 242px;

// Colors
// $body-background-color: #ffffff;
// $primary-color: #5E6469;
// $secondary-color: #f0f0f0;
// $text-color: #323537;
// $link-color: #38678b;
// $section-header-text-color: $primary-color;
// $current-menu-item-background: lighten($primary-color, 12%);
// $hover-menu-item-background: lighten($primary-color, 12%);
// $table-stripe-color: lighten($primary-color, 57%); 
// $table-selected-color: #d9e4ec;
// $error-color: #932419;

// Sizes
// $horizontal-page-margin: 30px;
// $sidebar-width: 270px;
// $cell-padding: 5px 10px 3px 10px;
// $cell-horizontal-padding: 12px;
// $section-padding: 15px;
// $text-input-horizontal-padding: 10px;

// Active Admin's got SASS!
@import "active_admin/mixins";
@import "active_admin/base";

// Overriding any non-variable SASS must be done after the fact.
// For example, to change the default status-tag color:
//
//   body.active_admin {
//      .status_tag { background: #6090DB; }
//   }
//
// Notice that Active Admin CSS rules are nested within a
// 'body.active_admin' selector to prevent conflicts with
// other pages in the app. It is best to wrap your changes in a 
// namespace so they are properly recognized. You have options
// if you e.g. want different styles for different namespaces:
//
// .active_admin       applies to any Active Admin namespace
// .admin_namespace    applies to the admin namespace (eg: /admin)
// .other_namespace    applies to a custom namespace named other (eg: /other)